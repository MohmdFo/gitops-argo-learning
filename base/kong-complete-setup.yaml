# Complete Kong Setup for ARM64
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-serviceaccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-ingress
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "patch", "update"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingressclasses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-ingress
subjects:
- kind: ServiceAccount
  name: kong-serviceaccount
  namespace: default
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: kong
spec:
  controller: ingress-controllers.konghq.com/kong
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-proxy
  template:
    metadata:
      labels:
        app: kong-proxy
    spec:
      serviceAccountName: kong-serviceaccount
      containers:
      - name: proxy
        image: kong:3.6.1-alpine
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_LOG_LEVEL
          value: "info"
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8001
          name: admin
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: ingress-controller
        image: kong/kubernetes-ingress-controller:3.0.2
        env:
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "http://127.0.0.1:8001"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-proxy"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
          name: webhook
        readinessProbe:
          httpGet:
            path: /readyz
            port: 10254
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
spec:
  type: NodePort
  selector:
    app: kong-proxy
  ports:
  - name: proxy
    port: 80
    targetPort: 8000
    nodePort: 32000
  - name: admin
    port: 8001
    targetPort: 8001
    nodePort: 32001